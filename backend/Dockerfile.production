# 电梯备忘录系统后端 - 生产环境 Dockerfile

# 使用官方 Node.js 18 Alpine 镜像作为基础镜像
FROM node:18-alpine AS base

# 安装必要的系统依赖
RUN apk add --no-cache \
    curl \
    ca-certificates \
    tzdata \
    chromium \
    nss \
    freetype \
    harfbuzz \
    ttf-freefont \
    wqy-zenhei \
    && rm -rf /var/cache/apk/*

# 设置时区
ENV TZ=Asia/Shanghai

# 设置Puppeteer使用系统安装的Chromium
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# 创建应用目录和用户
RUN addgroup -g 1001 -S elevator && \
    adduser -S elevator -u 1001 -G elevator

WORKDIR /app

# 复制 package.json 和 package-lock.json
COPY package*.json ./

# 构建阶段 - 安装所有依赖
FROM base AS dependencies

# 安装生产依赖
RUN npm ci --only=production --no-audit --no-fund && \
    npm cache clean --force

# 运行时阶段
FROM base AS production

# 从依赖阶段复制 node_modules
COPY --from=dependencies /app/node_modules ./node_modules

# 复制源代码
COPY . .

# 创建必要的目录
RUN mkdir -p uploads/signatures logs && \
    chown -R elevator:elevator /app

# 切换到非特权用户
USER elevator

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:3000 || exit 1

# 暴露端口
EXPOSE 3000

# 设置启动命令
CMD ["node", "server.js"]

# 多阶段构建标签
LABEL \
    name="elevator-memo-backend" \
    description="电梯自行检测备忘录电子化系统 - 后端API" \
    version="1.0.0" \
    maintainer="elevator-memo-team" \
    build-date="$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
    vcs-url="https://github.com/your-repo/elevator-memo-system"